// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Undersoft.GCC.Infrastructure.Stores;

#nullable disable

namespace Undersoft.GCC.Infrastructure.DataStores.Migrations.Events
{
    [DbContext(typeof(EventStore))]
    partial class EventStoreModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Proxies:ChangeTracking", false)
                .HasAnnotation("Proxies:CheckEquality", false)
                .HasAnnotation("Proxies:LazyLoading", true);

            modelBuilder.Entity("Undersoft.SDK.Service.Data.Event.Event", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("INTEGER")
                        .HasColumnOrder(1);

                    b.Property<string>("CodeNo")
                        .IsConcurrencyToken()
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("TEXT")
                        .HasColumnOrder(4);

                    b.Property<DateTime>("Created")
                        .HasColumnType("timestamp")
                        .HasColumnOrder(8);

                    b.Property<string>("Creator")
                        .HasMaxLength(128)
                        .HasColumnType("TEXT")
                        .HasColumnOrder(9);

                    b.Property<byte[]>("Data")
                        .HasColumnType("BLOB");

                    b.Property<long>("EntityId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("EntityTypeName")
                        .HasColumnType("TEXT");

                    b.Property<string>("EventType")
                        .HasColumnType("TEXT");

                    b.Property<int>("Index")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnOrder(10);

                    b.Property<string>("Label")
                        .HasMaxLength(256)
                        .HasColumnType("TEXT")
                        .HasColumnOrder(11);

                    b.Property<DateTime>("Modified")
                        .HasColumnType("timestamp")
                        .HasColumnOrder(6);

                    b.Property<string>("Modifier")
                        .HasMaxLength(128)
                        .HasColumnType("TEXT")
                        .HasColumnOrder(7);

                    b.Property<int>("PublishStatus")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("PublishTime")
                        .HasColumnType("timestamp");

                    b.Property<long>("TypeId")
                        .HasColumnType("INTEGER")
                        .HasColumnOrder(2);

                    b.Property<string>("TypeName")
                        .HasMaxLength(768)
                        .HasColumnType("TEXT")
                        .HasColumnOrder(5);

                    b.Property<uint>("Version")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("Index");

                    b.ToTable("Events", "domain");
                });
#pragma warning restore 612, 618
        }
    }
}
