{
  "General": {
    "Name": "undersoft-ssc-service-application-server",
    "BaseUrl": "https://undersoft-ssc-service-application-server:15015",
    "Version": "v1",
    "TypeName": "Undersoft.SVC.Service.Application.Server.Hosting.ApplicationServerHost"
  },

  "AllowedHosts": "*",

  "Repository": {
    "Sources": {
      "Undersoft.SVC.Service.Infrastructure.Stores.EntryStore": {
        "ConnectionString": "Host=undersoft-svc-data-server; Port=5432; Database=us-svc-app-entry-db; UserId=postgres; Password=V00dkaPL; Pooling=true;",
        "SourceProvider": "PostgreSql",
        "PoolSize": 64
      },
      "Undersoft.SVC.Service.Infrastructure.Stores.EventStore": {
        "ConnectionString": "Host=undersoft-svc-data-server; Port=5432; Database=us-svc-app-event-db; UserId=postgres; Password=V00dkaPL; Pooling=true;",
        "SourceProvider": "PostgreSql",
        "PoolSize": 64
      },
      "Undersoft.SVC.Service.Infrastructure.Stores.ReportStore": {
        "ConnectionString": "Host=undersoft-svc-data-server; Port=5432; Database=us-svc-app-report-db; UserId=postgres; Password=V00dkaPL; Pooling=true;",
        "SourceProvider": "PostgreSql",
        "PoolSize": 64
      }
    },
    "Clients": {
      "Undersoft.SVC.Service.Clients.ServiceClient": {
        "ConnectionString": "http://undersoft-svc-service-server:26026/",
        "ClientProvider": "Open",
        "PoolSize": 128
      },
      "Undersoft.SVC.Service.Clients.AccessClient": {
        "ConnectionString": "http://undersoft-svc-service-server:26026/",
        "ClientProvider": "Open",
        "PoolSize": 128
      }
    }
  },
  "DataCache": {
    "Hours": "0",
    "Minutes": "45"
  },
  "Serilog": {
    "MinimumLevel": "Information",
    "Using": [ "Serilog.Sinks.Console", "Serilog.Sinks.File" ],
    "WriteTo": [
      {
        "Name": "Console",
        "Args": {
          "outputTemplate": "[{Timestamp:yyyy/MM/dd HH:mm:ss} {Level:u11}] {Message:lj} {NewLine}{Exception}{NewLine}",
          "theme": "Serilog.Sinks.SystemConsole.Themes.SystemConsoleTheme::Literate, Serilog.Sinks.Console"
        }
      },
      {
        "Name": "File",
        "Args": {
          "outputTemplate": "[{Timestamp:yyyy/MM/dd HH:mm:ss} {Level:u11}] {Message:lj} {NewLine}{Exception}{NewLine}",
          "path": "../../logs/test.txt",
          "shared": "true",
          "fileSizeLimitBytes": "1000000",
          "rollOnFileSizeLimit": true,
          "flushToDiskInterval": "1"
        }
      }
    ]
  },
  "Logging": {
    "LogLevel": {
      "Default": "Information",
      "Microsoft.AspNetCore": "Information"
    }
  },
  "Kestrel": {
    "Endpoints": {
      "Http": {
        "Protocols": "Http1",
        "Url": "http://+:16016"
      },
      "Https": {
        "Protocols": "Http1AndHttp2",
        "Url": "https://+:15015",
        "Certificate": {
          "Path": "Properties/localhost.pfx",
          "Password": "V11dkaPL",
          "AllowInvalid": true
        }
      }
    },
    "Certificates": {
      "Default": {
        "Path": "Properties/pem.crt",
        "KeyPath": "Properties/pem.key",
        "AllowInvalid": true
      }
    }
  },
  "StoreRoutes": {
    "EntryStoreRoute": "entry/data",
    "ReportStoreRoute": "report/data",
    "EventStoreRoute": "",
    "DataStoreRoute": "data",
    "AuthStoreRoute": "auth",
    "OpenEventRoute": "open",
    "OpenDataRoute": "open/data",
    "StreamEventRoute": "stream",
    "StreamDataRoute": "stream/data",
    "ApiEventRoute": "api",
    "ApiDataRoute": "api/data",
    "ApiAuthRoute": "api/auth",
    "OpenAuthRoute": "open/auth",
    "ApiServiceRoute": "api/srvc",
    "OpenServiceRoute": "open/srvc",
    "StreamServiceRoute": "stream/srvc",
    "ApiAppRoute": "api/app",
    "OpenAppRoute": "open/app",
    "StreamAppRoute": "stream/app"
  },
  "OpenTelemetry": {
    "IncludeFormattedMessage": true,
    "IncludeScopes": true,
    "ParseStateValues": true
  },
  "ServiceName": "undersoft-ssc-service-application-server",
  "UseTracingExporter": "jeager",
  "UseMetricsExporter": "prometheus",
  "UseLogExporter": "console",
  "HistogramAggregation": "explicit",
  "Jaeger": {
    "AgentHost": "localhost",
    "AgentPort": 6831,
    "Endpoint": "http://localhost:14268",
    "Protocol": "UdpCompactThrift"
  },
  "AspNetCoreInstrumentation": {
    "RecordException": "true"
  },
  "AccessServer": {
    "ServerBaseUrl": "http://undersoft-ssc-service-server:26026",
    "ServiceName": "undersoft-ssc-service-application-server",
    "ServiceVersion": "v1",
    "ServiceBaseUrl": "http://undersoft-ssc-service-application-server:16016",
    "ServiceClientId": "undersoft-ssc-service-application-server",
    "Audience": "http://undersoft-ssc-service-server:26026",
    "Issuer": "http://undersoft-ssc-service-server:26026",
    "Scopes": [
      "account.read",
      "account.update",
      "account.create",
      "account.delete",
      "account.access",
      "account.action",
      "account.setup",
      "application.read",
      "application.update",
      "application.create",
      "application.delete",
      "application.access",
      "application.action",
      "application.setup",
      "service.read",
      "service.update",
      "service.create",
      "service.delete",
      "service.access",
      "service.action",
      "service.setup",
      "member.read",
      "member.update",
      "member.create",
      "member.delete",
      "member.access",
      "member.action",
      "member.setup",
      "activity.read",
      "activity.update",
      "activity.create",
      "activity.delete",
      "activity.access",
      "activity.action",
      "activity.setup",
      "resource.read",
      "resource.update",
      "resource.create",
      "resource.delete",
      "resource.access",
      "resource.action",
      "resource.setup",
      "schedule.read",
      "schedule.update",
      "schedule.create",
      "schedule.delete",
      "schedule.access",
      "schedule.action",
      "schedule.setup"
    ],
    "Claims": [
      "group",
      "id",
      "user_id",
      "type_id",
      "code_no",
      "email",
      "name",
      "profile",
      "label",
      "type",
      "role",
      "scope",
      "client_id"
    ],
    "Roles": [
      "member",
      "user",
      "manager,",
      "administrator",
      "provider",
      "subcontractor",
      "customer",
      "servicer",
      "integrator",
      "service"
    ],
    "AdministrationRole": "Administrator",
    "RequireHttpsMetadata": false,
    "CorsAllowAnyOrigin": true,
    "CorsAllowOrigins": []
  }
}
