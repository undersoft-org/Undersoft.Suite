@using System.ComponentModel.DataAnnotations
@using Microsoft.FluentUI.AspNetCore.Components.Extensions
@using Microsoft.FluentUI.AspNetCore.Components.Utilities
@using Undersoft.SDK.Proxies
@using Undersoft.SDK.Rubrics
@using Undersoft.SDK;

@inherits ViewItem

<FluentWizardStep @ref="Step" Style="@StepStyle" Summary="@(string.IsNullOrEmpty(Data.Description) ? null: Data.Description)" Label="@Data.Title" Disabled="@Rubric.Disabled" IconCurrent="@IconCurrent" IconNext="@IconNext" IconPrevious="@IconPrevious" >  
    <ChildContent>
        @if (ShowTitle)
        {
            <FluentLabel Typo="Typography.Header">@Data.Title</FluentLabel>
        }
        <GenericFormItem Data="@Data" Rubric="@Rubric" />
    </ChildContent>
</FluentWizardStep>


@code
{
    [Parameter]
    public Icon? IconCurrent { get; set; }

    [Parameter]
    public Icon? IconNext { get; set; }

    [Parameter]
    public Icon? IconPrevious { get; set; }

    [Parameter]
    public string? StepStyle { get; set; }

    public FluentWizardStep Step { get; set; } = default!;

    [CascadingParameter]
    public IViewItem Form { get; set; } = default!;

    [Parameter]
    public bool ShowTitle { get; set; } = false;

    protected override void OnInitialized()
    {       
        Data.ViewItem = this;
    }
}