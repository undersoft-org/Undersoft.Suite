@using System.ComponentModel.DataAnnotations
@using Undersoft.SDK.Proxies
@using Undersoft.SDK.Rubrics
@using Undersoft.SDK;
@using Undersoft.SDK.Service.Application.GUI.View.Abstraction

@inherits ViewItem

<CascadingValue Value="Data">
    <FluentDataGridRow @key="@Id" GridTemplateColumns=@GridTemplateColumns VerticalAlignment="VerticalAlignment.Center" Style="height:35px" TGridItem="string" @ref=Reference>

        @if (FeatureFlags.Expandable)
        {
            <GenericDataGridFeature Ordinal="1">
                <div id="@($"{Model.Id.ToString()}-expander")" role="button">
                    <FluentIcon Value="@(new Icons.Regular.Size20.List())" Color="Color.Accent" />
                </div>
                <div>
                    <GenericMenu Position="HorizontalPosition.Right"
                                 VerticalPosition="VerticalPosition.Unset"
                                 AnchorId="@($"{Model.Id.ToString()}-expander")"
                                 Data="@Data"
                                 Anchored="true" />
                </div>
            </GenericDataGridFeature>
        }

        @if (FeatureFlags.Multiselect)
        {
            <GenericDataGridFeature Ordinal="@(RubricOrdinalSeed > 2 ? 2 : 1)">
                <FluentCheckbox @bind-Value="@Checked" />
            </GenericDataGridFeature>
        }

        @if (FeatureFlags.Editable && StateFlags.Editing && EditMode == EditMode.Row)
        {
            foreach (var rubric in Data.Rubrics)
            {
                <GenericDataGridField Rubric="rubric" Parent="this" />
            }
        }
        else
        {
            foreach (var rubric in Data.Rubrics)
            {
                <GenericDataGridValue Rubric="rubric" Parent="this" />
            }
        }

        @if (FeatureFlags.Editable && EditMode != EditMode.None)
        {
            <GenericDataGridFeature Ordinal="@(Data.Rubrics.Count + RubricOrdinalSeed)" Parent="this">
                <div id="@($"{Model.Id.ToString()}-item-operation")" role="button">
                    <FluentIcon Value="@(new Icons.Regular.Size20.Navigation())" Color="Color.Accent" />
                </div>
                <div>
                    <GenericMenu Position="HorizontalPosition.Left"
                                 VerticalPosition="VerticalPosition.Unset"
                                 AnchorId="@($"{Model.Id.ToString()}-item-operation")"
                                 Data="@(GetItemOperationData())"
                                 Anchored="true" />
                </div>
            </GenericDataGridFeature>
        }

    </FluentDataGridRow>

    @if (FeatureFlags.Editable && StateFlags.Editing && EditMode == EditMode.SubRow)
    {
        <FluentDataGridRow @key="@Id" TGridItem="string">

            <GenericFormItem Orientation="Orientation.Horizontal" Parent="this" />

        </FluentDataGridRow>
    }
    </CascadingValue>

    @if (FeatureFlags.Expandable)
{
    foreach (var data in Data.Where(d => d.StateFlags.Expanded))
    {
        <FluentDataGridRow @key="@data.Id" TGridItem="string">

            <GenericDataSubGrid DataStore="@((IViewDataStore)data)" />

        </FluentDataGridRow>
    }
}




