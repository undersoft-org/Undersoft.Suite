{
  "General": {
    "Name": "undersoft-global-currency-conversion-service-api",
    "BaseUrl": "http://loccalhost:26026",
    "Version": "v1",
    "TypeName": "Undersoft.SSC.Service.Server.Hosting.ServerHost"
  },
  "AllowedHosts": "*",

  "Cache": {
    "Hours": "0",
    "Minutes": "45"
  },

  "Repository": {
    "Sources": {
      "Undersoft.GCC.Infrastructure.Stores.EntryStore": {
        "ConnectionString": "Data Source=./data/us-gcc-entry.db;",
        "SourceProvider": "SqlLite",
        "PoolSize": 64
      },
      "Undersoft.GCC.Infrastructure.Stores.EventStore": {
        "ConnectionString": "Data Source=./data/us-gcc-event.db;",
        "SourceProvider": "SqlLite",
        "PoolSize": 64
      },
      "Undersoft.GCC.Infrastructure.Stores.ReportStore": {
        "ConnectionString": "Data Source=./data/us-gcc-report.db;",
        "SourceProvider": "SqlLite",
        "PoolSize": 64
      }
    },
    "Clients": {
      "Undersoft.GCC.Service.Clients.GCCServiceClient": {
        "ConnectionString": "http://localhost:26026/",
        "ClientProvider": "Open",
        "PoolSize": 6
      }
    }
  },
  "Currencies": {
    "Providers": {
      "Undersoft.GCC.Infrastructure.Currencies.NBP": {
        "Name": "NBP",
        "FullName": "National Bank Of Poland",
        "Type": "Bank",
        "BaseCurrency": {
          "CurrencyCode": "PLN",
          "Name": "Polish złoty",
          "IsDecimal": true,
          "Symbol": "zł"
        },
        "BaseUri": "http://api.nbp.pl/api/exchangerates",
        "UpdateHour": 8,
        "UpdateMinute": 15,
        "HistorySince": "2002-01-02"
      },
      "Undersoft.GCC.Infrastructure.Currencies.ECB": {
        "Name": "ECB",
        "FullName": "European Central Bank",
        "Type": "Bank",
        "BaseCurrency": {
          "CurrencyCode": "EUR",
          "Name": "Euro",
          "IsDecimal": true,
          "Symbol": "€"
        },
        "BaseUri": "https://www.ecb.europa.eu/stats/eurofxref",
        "UpdateHour": 16,
        "UpdateMinute": 15,
        "HistorySince": "1999-01-04"
      },
      "Undersoft.GCC.Infrastructure.Currencies.Frankfurter": {
        "Name": "Frankfurter",
        "FullName": "Frankfurter",
        "Type": "Broker",
        "BaseCurrency": {
          "CurrencyCode": "EUR",
          "Name": "Euro",
          "IsDecimal": true,
          "Symbol": "€"
        },
        "BaseUri": "http://api.frankfurter.app",
        "UpdateHour": 16,
        "UpdateMinute": 30,
        "HistorySince": "1999-01-04"
      }
    }
  },
  "Serilog": {
    "MinimumLevel": "Debug",
    "Using": [ "Serilog.Sinks.Console", "Serilog.Sinks.File" ],
    "WriteTo": [
      {
        "Name": "Console",
        "Args": {
          "outputTemplate": "[{Timestamp:yyyy/MM/dd HH:mm:ss} {Level:u11}] {Message:lj} {NewLine}{Exception}{NewLine}",
          "theme": "Serilog.Sinks.SystemConsole.Themes.SystemConsoleTheme::Literate, Serilog.Sinks.Console"
        }
      },
      {
        "Name": "File",
        "Args": {
          "outputTemplate": "[{Timestamp:yyyy/MM/dd HH:mm:ss} {Level:u10}] {Message:lj} {NewLine}{Exception}{NewLine}",
          "path": "../../logs/us-gcc-service-api-log.txt",
          "shared": "true",
          "fileSizeLimitBytes": "1000000",
          "rollOnFileSizeLimit": true,
          "flushToDiskInterval": "1"
        }
      }
    ]
  },
  "Kestrel": {
    "Endpoints": {
      "Http": {
        "Protocols": "Http1",
        "Url": "http://+:26026"
      },
      "Https": {
        "Protocols": "Http1AndHttp2",
        "Url": "https://+:25025"
      }
    }
  },
  "StoreRoutes": {
    "EntryStoreRoute": "entry/data",
    "ReportStoreRoute": "report/data",
    "EventStoreRoute": "",
    "DataStoreRoute": "data",
    "AuthStoreRoute": "auth",
    "OpenEventRoute": "open",
    "OpenDataRoute": "open/data",
    "StreamEventRoute": "stream",
    "StreamDataRoute": "stream/data",
    "ApiEventRoute": "api",
    "ApiDataRoute": "api/data",
    "ApiAuthRoute": "api/auth",
    "OpenAuthRoute": "open/auth",
    "ApiServiceRoute": "api/srvc",
    "OpenServiceRoute": "open/srvc",
    "StreamServiceRoute": "stream/srvc",
    "ApiAppRoute": "api/app",
    "OpenAppRoute": "open/app",
    "StreamAppRoute": "stream/app"
  }
}